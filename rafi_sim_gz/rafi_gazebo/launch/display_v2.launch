<launch>
  <!-- Lanzar Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="/usr/share/gazebo-11/worlds/empty.world"/>
      <arg name="paused" value="true"/>
      <arg name="verbose" value="true"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
  </include>

  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-f dummy -d $(find franka_example_controllers)/launch/rviz/franka_description_with_marker.rviz"/>

  <arg name="paused" default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="controller" default="cartesian_impedance_example_controller" doc="Which example controller should be started? (One of {cartesian_impedance,model,force,joint_position,joint_velocity}_example_controller)" />
  <arg name="arm_id" default="panda" doc="Name of the robot to spawn" />
  <arg name="use_gripper" default="true" doc="Should the gripper be used?" />

  <param name="robot_description" command="xacro '$(find rafi_gazebo)/description/rafi_v2.urdf.xacro'" />

  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <arg name="initial_joint_positions"
  doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
  default="-J $(arg arm_id)_joint1 0
           -J $(arg arm_id)_joint2 -0.785398163
           -J $(arg arm_id)_joint3 0
           -J $(arg arm_id)_joint4 -2.35619449
           -J $(arg arm_id)_joint5 0
           -J $(arg arm_id)_joint6 1.57079632679
           -J $(arg arm_id)_joint7 0.785398163397
           -J $(arg arm_id)_finger_joint1 0.001
           -J $(arg arm_id)_finger_joint2 0.001"
/>

  <node name="$(arg arm_id)_model_spawner"
  pkg="gazebo_ros"
  type="spawn_model"
  args="-param robot_description -urdf -model $(arg arm_id) $(arg unpause) $(arg initial_joint_positions) -x 0 -y 0 -z 0.5"/>
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states]</rosparam>
      <param name="rate" value="30"/>
  </node>

  <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
  <rosparam file="$(find franka_gazebo)/config/sim_controllers.yaml" subst_value="true" />

  

  <arg name="interactive_marker" default="$(eval arg('controller') == 'cartesian_impedance_example_controller')" doc="Should the interactive marker node be started?" />

  

 

  <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_gripper_spawner"
        if="$(arg use_gripper)"
        args="franka_gripper"
        respawn="false"
        output="screen"/>

  <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_controller_spawner"
        respawn="false" 
        output="screen"
        args="wait-for initialized franka_state_controller $(arg controller)"/>

  <node name="interactive_marker"
        pkg="franka_example_controllers"
        type="interactive_marker.py"
        if="$(arg interactive_marker)">
      <param name="link_name" value="$(arg arm_id)_link0" />
      <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
  </node>
</launch>
